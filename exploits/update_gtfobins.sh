#!/bin/bash

QUIET_MODE=false
[ "$1" = "--quiet" ] && QUIET_MODE=true

log() {
    $QUIET_MODE || echo "$@"
}

SCRIPT_DIR="$(dirname "$(realpath "$0")")"
DATA_DIR="$SCRIPT_DIR/data"

bins_url="https://gtfobins.github.io/"
info_bin_url="https://raw.githubusercontent.com/GTFOBins/GTFOBins.github.io/master/_gtfobins/"
functions_url="https://raw.githubusercontent.com/GTFOBins/GTFOBins.github.io/master/_data/functions.yml"

TOP_LIMIT=20

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m'

check_deps() {
    for cmd in curl yq jq; do
        if ! command -v "$cmd" &>/dev/null; then
            echo -e "${RED}[!] $cmd is not installed.${NC}"
            exit 1
        fi
    done
}

setup_dir() {
    mkdir -p "$DATA_DIR"
}

update_gtfobins() {
    check_deps
    setup_dir

    log "${YELLOW}[*] Fetching list of binaries...${NC}"
    remote_bins=$(curl -s "$bins_url" | grep 'bin-name' | grep -oP '(?<=\>).*?(?=\<)')
    log "${YELLOW}[*] Found $(echo "$remote_bins" | wc -l) binaries${NC}"

    log "${YELLOW}[*] Downloading and converting...${NC}"
    counter=0
    limit=$TOP_LIMIT

    for bin in $remote_bins; do
        (
            json_out=$(curl -s "$info_bin_url$bin.md" | sed '$d' | yq -j 2>/dev/null)
            echo "$json_out" | jq empty 2>/dev/null && echo "$json_out" > "$DATA_DIR/$bin.json"
        ) &
        counter=$((counter + 1))

        if [[ $counter -eq $limit ]]; then
            wait
            limit=$((limit + TOP_LIMIT))
        fi
    done
    wait

    log "${YELLOW}[*] Updating functions index...${NC}"
    func_json=$(curl -s "$functions_url" | yq -j 2>/dev/null)
    echo "$func_json" | jq empty 2>/dev/null && echo "$func_json" > "$DATA_DIR/functions.json"

    log "${GREEN}[+] Update complete! Saved in $DATA_DIR${NC}"
}

update_gtfobins

$QUIET_MODE && echo -e "DATA_PATH=$DATA_DIR\nBIN_COUNT=$(echo "$remote_bins" | wc -l)"
